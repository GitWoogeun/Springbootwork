server:
  port: 8000
  servlet:
    context-path: /                            # context-path : 내 프로젝트에 들어가기 위한 진입장벽   => http://localhost:8000/blog/~
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    
spring:
  mvc:
    view:
      prefix: /WEB-INF/views/                 # prefix : Controller가 리턴을할 때 앞에 붙여주는 경로 명
      suffix: .jsp                                            # suffix : Controller가 리턴을할 때 뒤에 붙여주는 경로 명 
      
  datasource:                                                                                                                 # database 설정
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234
    
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create                                                # create :  프로젝트가 재실행 할때 마다 테이블을 새로 만들겠다. ( 최초시에만 create로 )
      naming:                                                                # update : 프로젝트가 재실행 할때 마다 테이블을 업데이트 하겠다.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl  # 엔티티를 만들 때 (테이블을 만들 떄) 변수명 그대로 데이터베이스 필드에 넣어준다.
      use-new-id-generator-mappings: false    #  MySQL일경우 auto_increament 어떤식으로 사용할지 방식을 결정 : false일 경우 JPA가 사용하는 기본 넘버링 전략을 따라가지 않는다.
    show-sql: true                                                     # 프로젝트에서 연결된 DB의 넘버링 전략을 따라간다. ( 참고 User 클래스 )
    properties:
      hibernate.format_sql: true                            # 콘솔에 쿼리를 예쁘게 정렬해서 보여준다.

  jackson:
    serialization:
      fail-on-empty-beans: false
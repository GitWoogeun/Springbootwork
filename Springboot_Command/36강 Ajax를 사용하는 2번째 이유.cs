
첫번째 이유 : 데이터를 JSON으로 변환을 하기위해서

# Ajax를 사용하는 2번째 이유 :

비동기 통신을 하기 위해서

절차적 1, 2, 3, 4, 5 단계를 거쳐서 프로그램이 실행이 된다 하면

1. 화면을 그리는 것                                  [ CPU ]
2. 어떤 연산을 하는 것                               [ CPU ]
3. 다운로드를 하는 것   ( 외부 ) ( 10초 대기 펜딩중 ) [ 저장장치 ] < 비동기처리 CPU가 저장장치에게 던짐 >
4. 도라에몽 그림을 그리는 것 ( 내장 )                 [ CPU ]     < 저장완료시 CPU 호출 >
5. 화면에 그림 ( 내장 )                              [ CPU ]    < CPU 작업중 >

펜딩 : 다운로드를 기다리고 있는 것;
펜딩이 끝나면 다운로드가 완료 되었기 때문에 CPU에게 알려준다. 4번으로 돌아가서 도라에몽을 그림
콜백 : 하던일을 멈추고 돌아가는 일

비동기적 실행 : 콜백으로 돌아가서 작업이 완료 되면 다시 5번으로 돌아와서 마저 그림을 그림
# ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

요리 
라면을 끓이고 있는데
냄비에 라면을 넣음     
라면 끓는 중             친구가 숙제를 봐달라고 함 
                        (라면 끓인지 10초 뒤라 2분50초동안 친구 숙제를 봐준다.)

동기적 : 한번에 모든일을 절차적으로 끝내는 일 
비동기 : 쉬고있는 자원을 끓어다가 쓰는 것


# IoC 제어의 역전
스프링 => IoC -> 제어의 역전
    new를 할 때 개발자가 new를 하는게 아니라
    Spring에서 new를 해준다.

    싱글톤 패턴 + 레퍼런스 변수 (스프링이 관리해주겠다.)

    필요한 공간마다 new해서 사용하면 번거롭잖아 그렇게 계속 new 하지말고
    내가(스프링)이 관리하겠다. Spring Container에서 관리해 줄테니까
    너는 Spring Container에서 가져다가 써!


스프링이 초반에 컨퍼넌트 스캔이라는걸 한다.
컨퍼넌트 스캔 :
=> 어떤 패키지가 있을 때 이 패키지 이하를 전부 다 스캔해서
   필요한것들을 메모리에 로드하는데 이걸 IoC라고 하고 싱글톤 패턴으로 관리 한다.
   메모리에 로드할 때 스프링컨테이너에 모든 객체에 대한 변수들을 관리한다.
   이렇게 관리 한다면 패키지를 스캔해서 IoC에 띄우는데 
   이 기준이 com.cos.blog라고 패키지를 만들었는데 이 패키지 이하만 관리한다.

   com.cos.test라고 하면 스프링이 스캔을 하지 않기 때문에
   com.cos.blog 패키지 아래로 생성 해야 한다.

# Spring Boot Project를 구현할 때 제일 중요한건 
=> 우리가 만든 패키지 이하로 패키지를 만들어야 한다.
=> ex) com.cos.blog => 이하로 domain 라던지 controller 라던지 resource 라던지 
   만들어야 한다.


Test클래스를 가지고 있다고 가정 했을 때
Class Test {
    void Hello() {
        A a = new A();   // new한다는건 Heap이라는 공간을 하나 만드는거고
                        //  그 공간은 A로 가르키겠다는건데..
                        //  a변수는 Hello라는 메소드 지역에 있는 변수 ( 지역변수 )
                        //  Hello 함수를 호출할 때 a가 메모리에 떴다가
                        //  Hello 함수가 호출이 끝날때 a 메모리가 사라진다.
    }
}

# 엄청 중요! Spring과 Java Version 맞추기 ( 이것 때문에 진짜 개고생 했음 )
Java의 Version을 1.8을 사용하고 있는데 Spring Version을 3.0.5 버전을 사용하면서
run을 실행 했을 시 자꾸 Application Content오류가 발생 했음! 구글링을 해봤지만, 
전부 해결이 안됨 결론 혼자서 해결 Java 버전과 Spring의 버전을 맞춰주지 않아서 문제 발생
┌──────────────────────────────────────────────────┐
│ Java Version 1.8 == Spring Version 2.2.6 RELEASE │
└──────────────────────────────────────────────────┘
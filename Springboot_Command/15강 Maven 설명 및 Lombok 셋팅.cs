
# Maven을 사용하는 이유 :
=> 프로젝트 : blog Project, instar Project
   ojdbc가 필요하다면, OracleDriver을 사용하기 위해선
   oracle 사이트에서 ojdbc를 다운로드 받는다.
   해당 파일을 내 프로젝트에 lib폴더를 생성 후 Copy한다.

   프로젝트가 ojdbc를 인식을 할 수 있게 빌드를 해야한다.
   프로젝트가 하나가 더 있다고 하면,
   인스타 프로젝트라고 하면 똑같이 lib폴더를 만들어서 ojdbc를 Copy해서 짚어 넣고
   빌드를 해야한다.
   ojdbc가 2개가 되었다.

   lib 폴더를 만들지 않고, Copy하지 않고, 그냥 어떤 폴더를 하나 만들어서
   Copy를 그 어떤 폴더에 한다.
   프로젝트 외부에 두면 양 쪽 프로젝트에서 사용할 수 있기 때문에 편리할것이다.

   개발환경이라고 치면 배포를 한다하면 Linux환경에 인스타 프로젝트를 배포한다고 하면
   ojdbc는 없다 lib 폴더는 내부에 저장하지 않고 외부에 저장해서 가져와서 사용했기 때문에..
   
   외부에 두면 장점은 파일 하나로 양쪽에서 사용할수있고
   단점은 배포를 하게 되면 다시 내부로 가져와야한다는것

   그리고 만약에 Oracle뿐만 아니라 MySQL 또한 사용한다고 가정하였을 때 
   그렇게 되면 위 방식을 두번이나 진행해야한다. 

   [ 해결 방안 ]
   중앙저장소를 하나 만들어서 이 저장소에 Jsoup도 넣어놓고, Ojdbc도 넣어놓고 등등
   각각의 라이브러리 사이트들이 있을텐데..
   내 프로젝트에서 사용하고 싶으면 각각의 사이트에서 다운로드를 받아야하는데..
   이걸 이렇게 하지 않고, [ 중앙저장소에 넣어두는것 ]

   [ 중앙저장소 == 파일서버 ]
   우리는 중앙저장소에만 접근을해서 라이브러리를 다운로드 받으면 된다
   라이브러리를 다운로드 받을려면 어떻게 받으냐면 pom.xml이라곳에서 다운로드를 받았는데
   여기에다가 pom.xml에 기술만 해놓는다.
   1. ojdbc가 필요해
   2. Jsoup이 필요해
     등등
    
   프로젝트가 실행될때 pom.xml이 이것들을 읽어서 중앙저장소에서 자동으로 다운로드 받는다
   .m2라는 폴더에서 받는다. 
    [ repository ]라는 폴더가 있는데 여기에다가 다 다운로드 받게해주고 자동으로 빌드까지 해준다.
